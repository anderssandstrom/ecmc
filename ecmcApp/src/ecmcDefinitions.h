
/*
 * ESSOSMCU-definitions.h
 *
 *  Created on: March 14, 2016
 *      Author: anderssandstrom
 */

#ifndef ECMCDEFINITIONS_H_
#define ECMCDEFINITIONS_H_

#define UNPACK( ... ) __VA_ARGS__

#define MCU_FREQUENCY 1000.0
#define MCU_NSEC_PER_SEC 1000000000
#define MCU_PERIOD_NS (int)(MCU_NSEC_PER_SEC / MCU_FREQUENCY)
#define DIFF_NS(A, B) (((B).tv_sec - (A).tv_sec) * MCU_NSEC_PER_SEC + \
  (B).tv_nsec - (A).tv_nsec)

#define ECMC_MAX_AXES 64
#define ECMC_MAX_PLCS 8

//Test new conversion
#define TIMESPEC2NS(T) ((uint64_t) (((T).tv_sec - 946684800ULL) * 1000000000ULL) + (T).tv_nsec)
//#define TIMESPEC2NSEPOCH2000(T) ((uint64_t) (((T).tv_sec - 946684800ULL) * 1000000000ULL) + (T).tv_nsec)

//#define MSG_TICK 0
#define MAX_MESSAGE 10000

//Buffer size
#define EC_MAX_OBJECT_PATH_CHAR_LENGTH 256

//Transforms
#define MAX_TRANSFORM_INPUTS ECMC_MAX_AXES*2
#define TRANSFORM_EXPR_LINE_END_CHAR '#'
#define TRANSFORM_EXPR_OUTPUT_VAR_NAME "out"
#define TRANSFORM_EXPR_COMMAND_EXECUTE_PREFIX "ex"
#define TRANSFORM_EXPR_COMMAND_ENABLE_PREFIX "en"
#define TRANSFORM_EXPR_VARIABLE_TRAJ_PREFIX "setPos"
#define TRANSFORM_EXPR_VARIABLE_ENC_PREFIX "actPos"
#define TRANSFORM_EXPR_INTERLOCK_PREFIX "ilock"

//EtherCAT
#define EC_MAX_PDOS 512
#define EC_MAX_ENTRIES 8192
#define EC_MAX_MEM_MAPS 8
#define EC_MAX_SLAVES 512

//Data recording
#define ECMC_MAX_DATA_RECORDERS_OBJECTS 10
#define ECMC_MAX_EVENT_OBJECTS 10
#define ECMC_MAX_DATA_STORAGE_OBJECTS 10
#define ECMC_DEFAULT_DATA_STORAGE_SIZE 1000
#define ECMC_MAX_EVENT_CONSUMERS 10
#define ECMC_MAX_COMMANDS_LISTS 10
#define ECMC_MAX_COMMANDS_IN_COMMANDS_LISTS 100

//Motion
enum app_mode_type{
  ECMC_MODE_CONFIG=0,
  ECMC_MODE_RUNTIME=1,
  ECMC_MODE_STARTUP=2
};

enum {
  ECMC_PRIO_LOW = 0,
  ECMC_PRIO_HIGH = 60
};

enum axisType{
  ECMC_AXIS_TYPE_BASE=0,
  ECMC_AXIS_TYPE_REAL=1,
  ECMC_AXIS_TYPE_VIRTUAL=2,
  ECMC_AXIS_TYPE_TRAJECTORY=3,
  ECMC_AXIS_TYPE_ENCODER=4,
};

enum operationMode{
  ECMC_MODE_OP_AUTO=0,
  ECMC_MODE_OP_MAN=1,
};

enum motionCommandTypes {
  ECMC_CMD_NOCMD=-1,
  ECMC_CMD_JOG=0,
  ECMC_CMD_MOVEVEL=1,
  ECMC_CMD_MOVEREL=2,
  ECMC_CMD_MOVEABS=3,
  ECMC_CMD_MOVEMODULO=4,     //NOT IMPLEMENTED
  ECMC_CMD_HOMING=10,        //PARTLY IMPLEMENTED
  ECMC_CMD_SUPERIMP=20,      //NOT IMPLEMENTED
  ECMC_CMD_GEAR=30 ,         //NOT IMPLEMENTED (implemented in another way..) Should adjust code to enable gear only when nCommand=30
};

enum motionDirection {
  ECMC_DIR_FORWARD=0,
  ECMC_DIR_BACKWARD=1,
  ECMC_DIR_STANDSTILL=2,
};

enum motionMode{
  ECMC_MOVE_MODE_POS=0,
  ECMC_MOVE_MODE_VEL=1,
};

enum dataSource{
  ECMC_DATA_SOURCE_INTERNAL=0,
  ECMC_DATA_SOURCE_EXTERNALENCODER=1,
  ECMC_DATA_SOURCE_EXTERNALTRAJECTORY=2
};

enum coordSystMode{
  ECMC_COORD_ABS=0,
  ECMC_COORD_REL=1,
};

enum stopMode{
  ECMC_STOP_MODE_EMERGENCY=0,
  ECMC_STOP_MODE_NORMAL=1,
  ECMC_STOP_MODE_RUN=2,
};

enum interlockTypes {
  ECMC_INTERLOCK_NONE=0,
  ECMC_INTERLOCK_SOFT_BWD=1,
  ECMC_INTERLOCK_SOFT_FWD=2,
  ECMC_INTERLOCK_HARD_BWD=3,
  ECMC_INTERLOCK_HARD_FWD=4,
  ECMC_INTERLOCK_NO_EXECUTE=5,
  ECMC_INTERLOCK_POSITION_LAG=6,
  ECMC_INTERLOCK_BOTH_LIMITS=7,
  ECMC_INTERLOCK_EXTERNAL=8,
  ECMC_INTERLOCK_TRANSFORM=9,
  ECMC_INTERLOCK_MAX_SPEED=10,
  ECMC_INTERLOCK_CONT_HIGH_LIMIT=11,
  ECMC_INTERLOCK_CONT_OUT_INCREASE_AT_LIMIT_SWITCH=12,
  ECMC_INTERLOCK_AXIS_ERROR_STATE=13,
  ECMC_INTERLOCK_UNEXPECTED_LIMIT_SWITCH_BEHAVIOUR=14,
  ECMC_INTERLOCK_VELOCITY_DIFF=15,
  ECMC_INTERLOCK_ETHERCAT_MASTER_NOT_OK=16,
};

enum encoderType{
  ECMC_ENCODER_TYPE_INCREMENTAL=0,
  ECMC_ENCODER_TYPE_ABSOLUTE=1,
};

enum commandType{
  ECMC_CMD_TYPE_EXECUTE=0,
  ECMC_CMD_TYPE_ENABLE=1,
};

enum transformVariableType{
  ECMC_TRANSFORM_VAR_TYPE_TRAJ=0,
  ECMC_TRANSFORM_VAR_TYPE_ENC=1,
  ECMC_TRANSFORM_VAR_TYPE_IL=2,
};

enum eventType{
  ECMC_SAMPLED = 0,
  ECMC_EDGE_TRIGGERED = 1,
};

enum triggerEdgeType{
  ECMC_POSITIVE_EDGE = 0,
  ECMC_NEGATIVE_EDGE = 1,
  ECMC_ON_CHANGE=2,
};

//Object types
enum motionObjectType{
  ECMC_OBJ_INVALID=0,
  ECMC_OBJ_DRIVE=1,
  ECMC_OBJ_ENCODER=2,
  ECMC_OBJ_MONITOR=3,
  ECMC_OBJ_CONTROLLER=4,
  ECMC_OBJ_TRAJECTORY=5,
  ECMC_OBJ_AXIS=6,
  ECMC_OBJ_EC=7
};

/*Available strings:
 *  ax<id>.health              (output)
 *  ax<id>.drv.control         (output)
 *  ax<id>.drv.velocity        (output)
 *  ax<id>.drv.status          (input)
 *  ax<id>.drv.break           (output)
 *  ax<id>.drv.reducetorque    (output)
 *  ax<id>.enc.actpos          (input)
 *  ax<id>.mon.lowlim          (input)
 *  ax<id>.mon.highlim         (input)drive
 *  ax<id>.mon.homesensor      (input)
 *  ax<id>.mon.extinterlock    (input)
*/

#define ECMC_AX_PATH_BUFFER_SIZE 256
#define ECMC_EC_PATH_BUFFER_SIZE 256

#define ECMC_STATIC_VAR "static."
#define ECMC_EC_STR "ec"
#define ECMC_EC_HEALTH_STR "health"
#define ECMC_AX_STR "ax"
#define ECMC_AX_HEALTH_STR "health"
#define ECMC_DRV_STR "drv"
#define ECMC_DRV_ENABLE_STR "control"
#define ECMC_DRV_VELOCITY_STR "velocity"
#define ECMC_DRV_ENABLED_STR "status"
#define ECMC_DRV_BREAK_STR "brake"
#define ECMC_DRV_REDUCETORQUE_STR "reducetorque"

#define ECMC_ENC_STR "enc"
#define ECMC_ENC_ACTPOS_STR "actpos"


#define ECMC_MON_STR "mon"
#define ECMC_MON_LOWLIM_STR "lowlim"
#define ECMC_MON_HIGHLIM_STR "highlim"
#define ECMC_MON_HOMESENSOR_STR "homesensor"
#define ECMC_MON_EXTINTERLOCK_STR "extinterlock"
#define ECMC_TRAJ_STR "traj"
#define ECMC_CNTRL_STR "cntrl"

#define ECMC_AXIS_DATA_STR_AXIS_ID "id"
#define ECMC_AXIS_DATA_STR_POS_SET "traj.setpos"
#define ECMC_AXIS_DATA_STR_POS_ACT "enc.actpos"
#define ECMC_AXIS_DATA_STR_CNTRL_ERROR "cntrl.error"
#define ECMC_AXIS_DATA_STR_POS_TARGET "traj.targetpos"
#define ECMC_AXIS_DATA_STR_POS_ERROR "cntrl.poserror"
#define ECMC_AXIS_DATA_STR_POS_RAW "enc.rawpos"
#define ECMC_AXIS_DATA_STR_CNTRL_OUT "cntrl.output"
#define ECMC_AXIS_DATA_STR_VEL_SET "traj.setvel"
#define ECMC_AXIS_DATA_STR_VEL_ACT "enc.actvel"
#define ECMC_AXIS_DATA_STR_VEL_SET_FF_RAW "traj.setvelffraw"
#define ECMC_AXIS_DATA_STR_VEL_SET_RAW "drv.setvelraw"
#define ECMC_AXIS_DATA_STR_CYCLE_COUNTER "counter"
#define ECMC_AXIS_DATA_STR_ERROR "error"
#define ECMC_AXIS_DATA_STR_COMMAND "traj.command"
#define ECMC_AXIS_DATA_STR_CMD_DATA "traj.cmddata"
#define ECMC_AXIS_DATA_STR_SEQ_STATE "seq.state"
#define ECMC_AXIS_DATA_STR_INTERLOCK_TYPE "mon.ilock"
#define ECMC_AXIS_DATA_STR_TRAJ_SOURCE "traj.source"
#define ECMC_AXIS_DATA_STR_ENC_SOURCE "enc.source"
#define ECMC_AXIS_DATA_STR_ENABLE "drv.enable"
#define ECMC_AXIS_DATA_STR_ENABLED "drv.enabled"
#define ECMC_AXIS_DATA_STR_EXECUTE "traj.execute"
#define ECMC_AXIS_DATA_STR_BUSY "traj.busy"
#define ECMC_AXIS_DATA_STR_AT_TARGET "mon.attarget"
#define ECMC_AXIS_DATA_STR_HOMED "enc.homed"
#define ECMC_AXIS_DATA_STR_LIMIT_BWD "mon.lowlim"
#define ECMC_AXIS_DATA_STR_LIMIT_FWD "mon.highlim"
#define ECMC_AXIS_DATA_STR_HOME_SWITCH "mon.homesensor"
#define ECMC_AXIS_DATA_STR_RESET "reset"

enum ecmcAxisDataType{
  ECMC_AXIS_DATA_NONE=0,
  ECMC_AXIS_DATA_AXIS_ID=1,
  ECMC_AXIS_DATA_POS_SET=2,
  ECMC_AXIS_DATA_POS_ACT=3,
  ECMC_AXIS_DATA_CNTRL_ERROR=4,
  ECMC_AXIS_DATA_POS_TARGET=5,
  ECMC_AXIS_DATA_POS_ERROR=6,
  ECMC_AXIS_DATA_POS_RAW=7,
  ECMC_AXIS_DATA_CNTRL_OUT=8,
  ECMC_AXIS_DATA_VEL_SET=9,
  ECMC_AXIS_DATA_VEL_ACT=10,
  ECMC_AXIS_DATA_VEL_SET_FF_RAW=11,
  ECMC_AXIS_DATA_VEL_SET_RAW=12,
  ECMC_AXIS_DATA_CYCLE_COUNTER=13,
  ECMC_AXIS_DATA_ERROR=14,
  ECMC_AXIS_DATA_COMMAND=15,
  ECMC_AXIS_DATA_CMD_DATA=16,
  ECMC_AXIS_DATA_SEQ_STATE=17,
  ECMC_AXIS_DATA_INTERLOCK_TYPE=18,
  ECMC_AXIS_DATA_TRAJ_SOURCE=19,
  ECMC_AXIS_DATA_ENC_SOURCE=20,
  ECMC_AXIS_DATA_ENABLE=21,
  ECMC_AXIS_DATA_ENABLED=22,
  ECMC_AXIS_DATA_EXECUTE=23,
  ECMC_AXIS_DATA_BUSY=24,
  ECMC_AXIS_DATA_AT_TARGET=25,
  ECMC_AXIS_DATA_HOMED=26,
  ECMC_AXIS_DATA_LIMIT_BWD=27,
  ECMC_AXIS_DATA_LIMIT_FWD=28,
  ECMC_AXIS_DATA_HOME_SWITCH=29,
  ECMC_AXIS_DATA_RESET=30,
};

enum ecmcDataSourceType{
  ECMC_RECORDER_SOURCE_NONE=0,
  ECMC_RECORDER_SOURCE_ETHERCAT=1,
  ECMC_RECORDER_SOURCE_AXIS=2,
  ECMC_RECORDER_SOURCE_STATIC_VAR=3,
};

#endif /* ECMCDEFINITIONS_H_ */
